@rendermode InteractiveServer

<div class="">
    @if (IsLightTheme) {
        <button type="button"
                class="hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500"
            @onclick="OnClick">
            <svg class="flex-shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                 viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                 stroke-linejoin="round">
                <circle cx="12" cy="12" r="4" />
                <path d="M12 8a2 2 0 1 0 4 4" />
                <path d="M12 2v2" />
                <path d="M12 20v2" />
                <path d="m4.93 4.93 1.41 1.41" />
                <path d="m17.66 17.66 1.41 1.41" />
                <path d="M2 12h2" />
                <path d="M20 12h2" />
                <path d="m6.34 17.66-1.41 1.41" />
                <path d="m19.07 4.93-1.41 1.41" />
            </svg>
        </button>
    } else {
        <button type="button"
                class="hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500"
            @onclick="OnClick">
            <svg class=" flex-shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                 viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                 stroke-linejoin="round">
                <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z" />
            </svg>
        </button>
    }
</div>

@code {
    [Inject] private IHttpContextAccessor HttpContextAccessor { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }
    public string Theme { get; set; } = "light";

    protected override void OnInitialized() {
        base.OnInitialized();
        byte[]? theme = HttpContextAccessor.HttpContext?.Session.Get<byte[]>("Theme");
        Theme = theme is not null ? System.Text.Encoding.UTF8.GetString(theme) : "light";
    }

    public async void OnClick() {
        if (Theme == "light") {
            Theme = "dark";
        } else {
            Theme = "light";
        }

        HttpContextAccessor.HttpContext?.Session.Set<byte[]>("Theme", System.Text.Encoding.UTF8.GetBytes(Theme));

        await JSRuntime.InvokeVoidAsync("window.diplomeocy.updateTheme", Theme);
    }

    public bool IsLightTheme => Theme == "light";
    public bool IsDarkTheme => !IsLightTheme;
}
