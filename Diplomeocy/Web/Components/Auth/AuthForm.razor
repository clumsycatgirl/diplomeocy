@using Microsoft.AspNetCore.Antiforgery

<div class="">
    <div class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-[90vh] lg:py-0">
        <div
            class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
            <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                <h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                    @GetActionText()</h1>
                <form class="space-y-4 md:space-y-6" action="#">
                    <div>
                        <label for="username"
                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Username</label>
                        <input type="username" name="username" id="username"
                            class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                            placeholder="eg. willyx" required="">
                        <span asp-validation-for="username" class="text-danger text-xs text-red-600 mt-2"></span>
                    </div>
                    <div>
                        <label for="password"
                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
                        <input type="password" name="password" id="password" placeholder="••••••••"
                            class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                            required="">
                        <span asp-validation-for="password" class="text-danger text-xs text-red-600 mt-2"></span>
                    </div>
                    @if (IsRegistration) {
                        <div>
                            <label for="passwordconfirmation"
                                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password
                                Confirmation</label>
                            <input type="password" name="passwordconfirmation" id="passwordconfirmation" placeholder="••••••••"
                                class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                required="">
                            <span asp-validation-for="passwordconfirmation" class="text-danger text-xs text-red-600 mt-2"></span>
                        </div>
                        <div>
                            <label for="profile-picture" class="block text-sm font-medium text-gray-900 dark:text-white">Profile Picture</label>
                            <div class="flex items-center space-x-4 dark:text-white">
                                <select id="profile-picture"
                                    class="w-64 py-2 px-4 rounded border dark:bg-gray-800 dark:border-gray-600"
                                    onchange="window.pfpOnChange()"
                                    name="picturePath">
                                    <option value="/assets/images/kittators/Kitler.png" selected>Kitler</option>
                                    <option value="/assets/images/kittators/Meowssolini.png">Meowssolini</option>
                                    <option value="/assets/images/kittators/Leonin.png">Leonin</option>
                                    <option value="/assets/images/kittators/Churchill.png">Purrcill</option>
                                    <option value="/assets/images/kittators/Elisabetta.png">Elisapurrta</option>
                                    <option value="/assets/images/kittators/Giorgio.png">Georgicat</option>
                                    <option value="/assets/images/kittators/Meowmed.png">Meowmed</option>
                                    <option value="/assets/images/kittators/Stalin.png">Catlin</option>
                                </select>
                                <img src="/assets/images/kittators/Kitler.png" alt="image"
                                    class="w-24 h-24 object-contain rounded" id="profile-picture-preview">
                            </div>
                        </div>
                    }
                    @if (HttpContextAccessor.HttpContext is not null) {
                        <input type="hidden" id="antiforgery-token"
                            name="__RequestVerificationToken"
                            value="@Antiforgery.GetAndStoreTokens(HttpContextAccessor.HttpContext).RequestToken" />
                    }
                    <button type="button"
                        class="w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-300 dark:hover:bg-primary-400 dark:focus:ring-primary-500"
                        hx-post="/Auth/@GetActionText()" hx-include="#antiforgery-token, @GetActionFields()"
                        hx-triggger="click" hx-on::after-request="@GetCallback()" hx-redirect="true" hx-swap="none">
                        @GetActionText()
                    </button>
                    <p class="text-sm font-light text-gray-500 dark:text-gray-400">
                        @if (IsRegistration) {
                            <span>Already have an account? </span>
                        } else {
                            <span>Don't have an account? </span>
                        }
                        <button type="button" class="font-medium text-primary-600 hover:underline dark:text-primary-300"
                            @onclick="() => SetIsRegister(!IsRegistration)">@GetReverseActionText()</button>
                    </p>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject] private IAntiforgery Antiforgery { get; set; }
    [Inject] private IHttpContextAccessor HttpContextAccessor { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    public bool IsRegistration { get; set; } = false;

    public void SetIsRegister(bool value) =>
        IsRegistration = value;

    public string GetActionText() =>
        IsRegistration ? "Register" : "Login";

    public string GetReverseActionText() =>
        IsRegistration ? "Login" : "Register";

    public string GetActionFields() =>
        "#username, #password" + (IsRegistration ? ", #passwordconfirmation, #profile-picture" : "");

    public string GetCallback() =>
        (IsRegistration ? "register" : "login") + "Callback(htmx, this, event)";

    protected override void OnAfterRender(bool firstRender) {
        base.OnAfterRender(firstRender);
        JSRuntime.InvokeVoidAsync("window.reloadComponentHtmx");

        if (IsRegistration) {
            JSRuntime.InvokeVoidAsync("window.reloadAuth");
        }
    }
}
